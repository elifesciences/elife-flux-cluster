apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: cluster-services
spec:
  template:
    metadata:
      labels:
        Cluster: "${cluster_name}"
        Project: "${cluster_name}"
        elifesciences.org/project: "${cluster_name}"
        type: karpenter
    spec:
      expireAfter: 720h # 30 * 24h = 720h
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: cluster-services
      requirements:
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["m", "c", "r", "t"]
        - key: karpenter.k8s.aws/instance-hypervisor
          operator: In
          values: ["nitro"]
        - key: "kubernetes.io/arch"
          operator: In
          values: ["amd64", "arm64"]
      startupTaints:
        - key: nidhogg.uswitch.com/spegel.spegel
          effect: NoSchedule
  limits:
    cpu: 1000
  disruption:
    consolidateAfter: "0s"
    consolidationPolicy: WhenEmptyOrUnderutilized
    budgets:
    - nodes: "1"
