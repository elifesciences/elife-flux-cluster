kubernetesPipelines:

  - dataPipelineId: 'Elife_Article_Xml_Pipeline_Kubernetes'
    airflow:
      dagParameters:
        schedule: '0 3 * * *'  # At 03:00, every day
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.elife_article_xml.cli'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: ELIFE_ARTICLE_XML_CONFIG_FILE_PATH
        value: /dag_config_files/elife-article-xml.config.yaml
      - name: GITHUB_API_AUTHORIZATION_FILE_PATH
        value: /dag_secret_files/github_api/github_api_authorization.txt
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
    volumeMounts:
      - name: github-api-secret-volume
        mountPath: /dag_secret_files/github_api/
        readOnly: true
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: github-api-secret-volume
        secret:
          secretName: github-api
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 1Gi
        cpu: 1000m
      requests:
        memory: 1Gi
        cpu: 100m

  - dataPipelineId: 'Extract_Keywords_From_Corpus_Kubernetes'
    airflow:
      dagParameters:
        schedule: '10 */2 * * *'  # At minute 10 past every other hour
    image: 'docker.io/elifesciences/peerscout-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'peerscout.cli'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: EXTRACT_KEYWORDS_FILE_PATH
        value: /dag_config_files/keyword-extraction-data-pipeline.config.yaml
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      requests:
        memory: 4.9Gi
        cpu: 1495m
        ephemeral-storage: 6Gi
      limits:
        memory: 6Gi
        cpu: 1700m

  - dataPipelineId: 'BigQuery_To_OpenSearch_Pipeline_Kubernetes'
    airflow:
      dagParameters:
        schedule: "0 13 * * *" # At 13:00, every day
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.opensearch.cli'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: BIGQUERY_TO_OPENSEARCH_CONFIG_FILE_PATH
        value: /dag_config_files/bigquery-to-opensearch--stg.yaml
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: OPENSEARCH_USERNAME_FILE_PATH
        value: /dag_secret_files/opensearch/username
      - name: OPENSEARCH_PASSWORD_FILE_PATH
        value: /dag_secret_files/opensearch/password
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
      - name: opensearch-secret-volume
        mountPath: /dag_secret_files/opensearch/
        readOnly: true
    volumes:
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
      - name: opensearch-secret-volume
        secret:
          secretName: opensearch-staging-admin-password
    resources:
      limits:
        memory: 1Gi
        cpu: 1000m
      requests:
        memory: 1Gi
        cpu: 100m

  - dataPipelineId: 'EuropePmc_Pipeline_Kubernetes'
    airflow:
      dagParameters:
        schedule: '0 6 * * *'  # At 06:00, every day
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.europepmc.cli_europepmc'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: EUROPEPMC_CONFIG_FILE_PATH
        value: /dag_config_files/europepmc.config.yaml
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 1Gi
        cpu: 1000m
      requests:
        memory: 1Gi
        cpu: 100m

  - dataPipelineId: 'EuropePmc_Labslink_Pipeline_Kubernetes'
    airflow:
      dagParameters:
        schedule: '40 * * * *' # 40 past the hour, every day
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.europepmc.cli_europepmc_labslink'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: EUROPEPMC_LABSLINK_CONFIG_FILE_PATH
        value: /dag_config_files/europepmc-labslink--test.config.yaml
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: EUROPEPMC_LABSLINK_FTP_PASSWORD_FILE_PATH
        value: /dag_secret_files/europepmc_labslink_ftp_credentials/password
      - name: EUROPEPMC_LABSLINK_FTP_DIRECTORY_NAME_FILE_PATH
        value: /dag_secret_files/europepmc_labslink_ftp_credentials/directory_name
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
      - name: europepmc-labslink-ftp-credentials-volume
        mountPath: /dag_secret_files/europepmc_labslink_ftp_credentials/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
      - name: europepmc-labslink-ftp-credentials-volume
        secret:
          secretName: europepmc-labslink-ftp-credentials--stg
    resources:
      limits:
        memory: 1Gi
        cpu: 1000m
      requests:
        memory: 1Gi
        cpu: 100m

  - dataPipelineId: 'Materialize_BigQuery_Views_Pipeline_Kubernetes'
    airflow:
      dagParameters:
        schedule: '@hourly'
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.bigquery_views.cli'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: MATERIALIZE_BIGQUERY_VIEWS_CONFIG_PATH
        value: "s3://staging-elife-data-pipeline/airflow-config/bigquery-views"
      - name: MATERIALIZE_BIGQUERY_VIEWS_GCP_PROJECT
        value: "elife-data-pipeline"
      - name: MATERIALIZE_BIGQUERY_VIEWS_DATASET
        value: staging
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 1Gi
        cpu: 1000m
      requests:
        memory: 1Gi
        cpu: 100m

  - dataPipelineId: 'Web_API_elife_observer_api_publication_dates_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=elife_observer_api_publication_dates'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_elife_people_api_people_staff_profile_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=elife_people_api_people_staff_profile'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_elife_profiles_api_people_orcid_profile_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=elife_profiles_api_people_orcid_profile'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_hypothesis_annotations_for_elife_journal_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=hypothesis_annotations_for_elife_journal'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_hypothesis_annotations_for_public_reviews_Kubernetes'
    airflow:
      dagParameters:
        schedule: '@hourly'
        tags:
          - 'Kubernetes'
          - 'DocMaps'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=hypothesis_annotations_for_public_reviews'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_toggl_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=toggl'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_civi_mailing_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=civi_mailing'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_civi_contacts_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=civi_contacts'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_civi_mailing_recipient_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=civi_mailing_recipient'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m

  - dataPipelineId: 'Web_API_twitter_api_v1_user_details_for_sciety_user_Kubernetes'
    airflow:
      dagParameters:
        schedule: '25 2 * * *'  # At 02:25 am
        tags:
          - 'Kubernetes'
    image: 'docker.io/elifesciences/data-hub-core-dags_unstable:latest'
    imagePullPolicy: Always
    arguments: 
      - 'python'
      - '-m'
      - 'data_pipeline.generic_web_api.cli'
      - '--data-pipeline-id=twitter_api_v1_user_details_for_sciety_user'
    env:
      - name: DEPLOYMENT_ENV
        value: '{ENV}'
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /dag_secret_files/gcloud/credentials.json
      - name: AWS_CONFIG_FILE
        value: /dag_secret_files/aws/credentials
      - name: WEB_API_CONFIG_FILE_PATH
        value: /dag_config_files/web-api-data-pipeline.config.yaml
    volumeMounts:
      - name: gcloud-secret-volume
        mountPath: /dag_secret_files/gcloud/
        readOnly: true
      - name: aws-secret-volume
        mountPath: /dag_secret_files/aws
        readOnly: true
      - name: data-hub-config-volume
        mountPath: /dag_config_files/
        readOnly: true
    volumes:
      - name: aws-secret-volume
        secret:
          secretName: credentials
      - name: gcloud-secret-volume
        secret:
          secretName: gcloud
      - name: data-hub-config-volume
        configMap:
          name: data-hub-configs
    resources:
      limits:
        memory: 600Mi
        cpu: 1000m
      requests:
        memory: 500Mi
        cpu: 100m
