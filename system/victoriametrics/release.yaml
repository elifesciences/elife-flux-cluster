apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoriametrics
spec:
  releaseName: victoriametrics
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      sourceRef:
        kind: HelmRepository
        name: victoriametrics
      version: "0.23.1"
  interval: 1h0m0s
  valuesFrom:
    - kind: ConfigMap
      name: alertmanager-values
      valuesKey: 'alertmanager-values.yaml'
    - kind: Secret
      name: alerts-urls
      valuesKey: slack-api-url
      targetPath: alertmanager.config.global.slack_api_url
    - kind: Secret
      name: alerts-urls
      valuesKey: healthchecks-io-url
      targetPath: alertmanager.config.receivers[1].webhook_configs[0].url
  values:
    fullnameOverride: victoriametrics
    vmsingle:
      enabled: false
    vmcluster:
      enabled: true
      spec:
        retentionPeriod: "3" # months
        vmstorage:
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: csi-ebs-st1
                resources:
                  requests:
                    storage: 500Gi
          resources:
            requests:
              cpu: 450m
              memory: 8192Mi
            limits: {}
          extraArgs:
            "inmemoryDataFlushInterval": "15s"
        vmselect:
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: csi-ebs-gp3

          resources:
            requests:
              cpu: 500m
              memory: 400Mi
            limits: {}
        vminsert:
          extraArgs:
            maxLabelsPerTimeseries: "50"
          resources:
            requests:
              cpu: 250m
              memory: 200Mi
            limits: {}
    vmagent:
      spec:
        externalLabels:
          cluster: ${cluster_name}
        extraArgs:
          "promscrape.kubernetesSDCheckInterval": "5s"
          "promscrape.suppressScrapeErrorsDelay": "30s"
        resources:
          requests:
            cpu: 400m
            memory: 250Mi
          limits: {}
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
          nginx.ingress.kubernetes.io/auth-url: "https://auth--test-cluster.elifesciences.org/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth--test-cluster.elifesciences.org/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
        hosts:
          - vmagent.${cluster_domain}
        tls:
          - secretName: vmagent-tls
            hosts:
              - vmagent.${cluster_domain}
    vmalert:
      spec:
        extraArgs:
          'external.url': https://vmalert.${cluster_domain}
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits: {}
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
          nginx.ingress.kubernetes.io/auth-url: "https://auth--test-cluster.elifesciences.org/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth--test-cluster.elifesciences.org/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
        hosts:
          - vmalert.${cluster_domain}
        tls:
          - secretName: vmalert-tls
            hosts:
              - vmalert.${cluster_domain}
    grafana:
      enabled: false
      forceDeployDatasource: true
      sidecar:
        dashboards:
          label: grafana_dashboard
        datasources:
          label: grafana_datasource
      ingress:
        hosts:
        - grafana.${cluster_domain}
    alertmanager:
      spec:
        externalURL: https://alertmanager.${cluster_domain}
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
          limits: {}
      ingress:
        enabled: true
        hosts:
          - alertmanager.${cluster_domain}
        tls:
          - secretName: alertmanager-tls
            hosts:
              - alertmanager.${cluster_domain}
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
          nginx.ingress.kubernetes.io/auth-url: "https://auth--test-cluster.elifesciences.org/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth--test-cluster.elifesciences.org/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
    defaultRules:
      rules:
        kubeScheduler: false # lives on EKS
        kubeApiserver: false # too memory intensive
      disabled:
        KubeMemoryOvercommit: true
        KubeCPUOvercommit: true
        KubeletTooManyPods: true
        TooHighChurnRate: true
        TooManyScrapeErrors: true
    kubeControllerManager:
      enabled: false # lives on EKS
    victoria-metrics-operator:
      operator:
        disable_prometheus_converter: false
      resources:
        requests:
          cpu: 10m
          memory: 40Mi
        limits: {}
    kube-state-metrics:
      resources:
        requests:
          cpu: 20m
          memory: 150Mi
        limits: {}
      rbac:
        extraRules:
          - apiGroups:
              - source.toolkit.fluxcd.io
              - kustomize.toolkit.fluxcd.io
              - helm.toolkit.fluxcd.io
              - notification.toolkit.fluxcd.io
              - image.toolkit.fluxcd.io
            resources:
              - gitrepositories
              - buckets
              - helmrepositories
              - helmcharts
              - ocirepositories
              - kustomizations
              - helmreleases
              - alerts
              - providers
              - receivers
              - imagerepositories
              - imagepolicies
              - imageupdateautomations
            verbs: [ "list", "watch" ]
      customResourceState:
        enabled: true
        config:
          spec:
            resources:
              - groupVersionKind:
                  group: kustomize.toolkit.fluxcd.io
                  version: v1
                  kind: Kustomization
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Kustomization resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, lastAppliedRevision ]
                      source_name: [ spec, sourceRef, name ]
              - groupVersionKind:
                  group: helm.toolkit.fluxcd.io
                  version: v2
                  kind: HelmRelease
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux HelmRelease resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, history, "0", chartVersion ]
                      chart_name: [ status, history, "0", chartName ]
                      chart_app_version: [ status, history, "0", appVersion ]
                      chart_ref_name: [ spec, chartRef, name ]
                      chart_source_name: [ spec, chart, spec, sourceRef, name ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: GitRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux GitRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      url: [ spec, url ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1beta2
                  kind: Bucket
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Bucket resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      endpoint: [ spec, endpoint ]
                      bucket_name: [ spec, bucketName ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: HelmRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux HelmRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      url: [ spec, url ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: HelmChart
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux HelmChart resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      chart_name: [ spec, chart ]
                      chart_version: [ spec, version ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1beta2
                  kind: OCIRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux OCIRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      url: [ spec, url ]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1beta3
                  kind: Alert
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Alert resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      suspended: [ spec, suspend ]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1beta3
                  kind: Provider
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Provider resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      suspended: [ spec, suspend ]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1
                  kind: Receiver
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Receiver resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      webhook_path: [ status, webhookPath ]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta2
                  kind: ImageRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux ImageRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      image: [ spec, image ]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta2
                  kind: ImagePolicy
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux ImagePolicy resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      source_name: [ spec, imageRepositoryRef, name ]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta2
                  kind: ImageUpdateAutomation
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux ImageUpdateAutomation resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      source_name: [ spec, sourceRef, name ]
    prometheus-node-exporter:
      resources:
        requests:
          cpu: 40m
          memory: 100Mi
        limits: {}
