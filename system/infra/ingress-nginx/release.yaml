---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
  namespace: infra

spec:
  interval: 1m
  releaseName: infra-ingress-nginx
  chart:
    spec:
      chart: ingress-nginx
      version: 4.10.1
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
      interval: 1m

  dependsOn:
  - name: sealed-secrets
    namespace: infra
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    controller:
      config:
        use-forwarded-headers: "true"
        use-proxy-protocol: "true"
        use-http2: "true"
        log-format-escape-json: "true"
        log-format-upstream: '{"timestamp": "$time_iso8601", "requestID": "$req_id", "proxyUpstreamName": "$proxy_upstream_name", "proxyAlternativeUpstreamName": "$proxy_alternative_upstream_name", "proxyProtocolAddr":"$proxy_protocol_addr", "proxyProtocolPort":"$proxy_protocol_port", "upstreamStatus": "$upstream_status", "upstreamAddr": "$upstream_addr","httpRequest":{"requestMethod": "$request_method", "requestUrl": "$host$request_uri", "status": $status,"requestSize": "$request_length", "responseSize": "$upstream_response_length", "userAgent": "$http_user_agent", "remoteIp": "$remote_addr", "referer": "$http_referer", "latency": "$upstream_response_time s", "protocol":"$server_protocol", "xForwardedFor": "$http_x_forwarded_for", "xOriginalForwardedFor": "$http_x_original_forwarded_for", "xForwardedHost": "$http_x_forwarded_host"}}'
      extraArgs:
        default-ssl-certificate: infra/tls-elife-wildcard-2024
      service:
        annotations:
          service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
          service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
          service.beta.kubernetes.io/aws-load-balancer-type: nlb
          service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
          service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "creator=ingress,cluster=${ingress_loadbalancer_cluster_name}"
          service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
      metrics:
        enabled: "true"
        serviceMonitor:
          enabled: "true"
      podAnnotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"
      resources:
        limits:
          memory: 600Mi
        requests:
          cpu: 100m
          memory: 300Mi
      replicaCount: 2
      watchIngressWithoutClass: true
      allowSnippetAnnotations: true
      nodeSelector:
        Project: ${cluster_name}
