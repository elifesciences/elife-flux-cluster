apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-hub-api--stg
  labels:
    app: data-hub-api--stg
  namespace: data-hub
spec:
  selector:
    matchLabels:
      app: data-hub-api--stg
  template:
    metadata:
      labels:
        app: data-hub-api--stg
    spec:
      containers:
      - name: data-hub-api
        image: ghcr.io/elifesciences/data-hub-api_unstable:develop-d9452aca-20240206.0936 # {"$imagepolicy": "data-hub:data-hub-api-unstable"}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 120
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 120
          periodSeconds: 60
        resources:
          limits:
            memory: 5120Mi
          requests:
            cpu: 700m
            memory: 4096Mi
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /root/.gcp/credentials.json
        volumeMounts:
        - name: gcp-credentials-sealed-secret-volume
          mountPath: /root/.gcp
          readOnly: true
      volumes:
      - name: gcp-credentials-sealed-secret-volume
        secret:
          secretName: gcloud
---
apiVersion: v1
kind: Service
metadata:
  name: data-hub-api--stg
  namespace: data-hub
spec:
  selector:
    app: data-hub-api--stg
  ports:
  - port: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: data-hub-api--stg
  namespace: data-hub
  labels:
    app: data-hub-api--stg
  annotations:
    nginx.ingress.kubernetes.io/limit-rps: "5" # burst multiplier *5, so accept upto 30 connections, but only pass on 5 at a time.
spec:
  rules:
    - host: data-hub-api--stg.elifesciences.org
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: data-hub-api--stg
                port:
                  number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: data-hub-api-kotahi--stg
  namespace: data-hub
  labels:
    app: data-hub-api--stg
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: data-hub-api-kotahi-http-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Data Hub API Kotahi'
spec:
  rules:
    - host: data-hub-api--stg.elifesciences.org
      http:
        paths:
          - pathType: Prefix
            path: "/kotahi"
            backend:
              service:
                name: data-hub-api--stg
                port:
                  number: 8000
