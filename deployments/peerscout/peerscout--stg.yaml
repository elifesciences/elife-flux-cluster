apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: peerscout--stg
  namespace: peerscout
spec:
  releaseName: peerscout--stg
  interval: 5m
  chart:
    spec:
      chart: charts/peerscout
      sourceRef:
        kind: GitRepository
        name: peerscout--stg
      interval: 1m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: docker.io/elifesciences/data-science-dags_peerscout-api_unstable # {"$imagepolicy": "peerscout:peerscout-unstable:name"}
      tag: develop-379361a4-20231211.1220 # {"$imagepolicy": "peerscout:peerscout-unstable:tag"}
    env:
      DATA_SCIENCE_STATE_PATH: s3://staging-elife-data-pipeline/airflow-config/data-science/state
      GOOGLE_APPLICATION_CREDENTIALS: /root/.gcp/credentials.json
      DEPLOYMENT_ENV: staging
      PEERSCOUT_API_TARGET_DATASET: staging
      SPACY_LANGUAGE_MODEL_NAME: "en_core_web_lg"
    volumeMounts:
    - name: aws-credentials-sealed-secret-volume
      mountPath: /root/.aws
      readOnly: true
    - name: gcp-credentials-sealed-secret-volume
      mountPath: /root/.gcp
      readOnly: true
    volumes:
    - name: aws-credentials-sealed-secret-volume
      secret:
        secretName: aws-credentials
    - name: gcp-credentials-sealed-secret-volume
      secret:
        secretName: gcp-credentials
    ingress:
      enabled: "true"
      hosts:
      - host: peerscout--test.elifesciences.org # this is `--test`, not `--stg` because it was setup this way on the old cluster, and is an external service.
        paths:
        - "/"
      annotations:
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: peerscout-http-basic-auth--stg
        nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - peerscout'
    resources:
      limits:
        cpu: 250m
        memory: 2Gi
    livenessProbe:
      httpGet:
        path: /api/status
        port: http
      initialDelaySeconds: 5
      timeoutSeconds: 30
      periodSeconds: 30
    readinessProbe:
      httpGet:
        path: /api/status
        port: http
      initialDelaySeconds: 5
      timeoutSeconds: 30
      periodSeconds: 10
